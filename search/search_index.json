{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Objetivo del trabajo","text":"<p>Su misi\u00f3n es ayudar a InmoSolutions a dise\u00f1ar e implementar su unidad de DevOps siguiendo los lineamientos establecidos en el modelo SRE. Se debe contemplar la implementaci\u00f3n desde el punto de vista organizacional hasta la especificaci\u00f3n del stack tecnol\u00f3gico a desarrollar.</p>"},{"location":"#aspectos-a-tener-en-cuenta","title":"Aspectos a tener en cuenta","text":""},{"location":"#definicion-de-sli-slo-y-sla","title":"Definici\u00f3n de SLI, SLO y SLA","text":"<ul> <li>Latencia de solicitud</li> <li>Tasa de error</li> <li>Throughput</li> <li>Disponibilidad</li> <li>Durabilidad</li> </ul>"},{"location":"#definicion-los-distintos-procesos-y-sus-flujos-de-trabajo","title":"Definici\u00f3n los distintos procesos y sus flujos de trabajo","text":"<ul> <li>Servicio de Guardias.</li> <li>Resoluci\u00f3n de incidencias.</li> <li>Gesti\u00f3n de incidencias.</li> <li>Documentaci\u00f3n del Postmortem</li> <li>Formaci\u00f3n del personal</li> </ul>"},{"location":"#skills-necesarios","title":"Skills necesarios","text":""},{"location":"#definicion-las-tareas-a-ser-desarrolladas-por-los-diferentes-roles","title":"Definici\u00f3n las tareas a ser desarrolladas por los diferentes roles.","text":""},{"location":"#estrategia-de-monitorizacion","title":"Estrategia de monitorizaci\u00f3n.","text":""},{"location":"#proceso-de-identificacion-de-tareas-rutinarias-y-su-posible-automatizacion","title":"Proceso de identificaci\u00f3n de tareas rutinarias y su posible automatizaci\u00f3n.","text":""},{"location":"#para-el-caso-del-stack-tecnologico-especificar-las-tecnologias-a-utilizar-y-la-forma-que-se-integran","title":"Para el caso del stack tecnol\u00f3gico, especificar las tecnolog\u00edas a utilizar y la forma que se integran.","text":""},{"location":"modeloActual/","title":"Modelo actual de la organizaci\u00f3n","text":"<p>InmoSolutions recibe solicitudes de sus clientes para la implementaci\u00f3n de mejoras y nuevas funcionalidades para las aplicaciones. Se alcanza un acuerdo entre los Account Managers y los ingenieros de los equipos de desarrollo para la realizaci\u00f3n de dichos mejoras y nuevas funcionalidades. Todas las solicitudes se gestionan de forma centralizada y se distribuyen a los equipos responsables de cada funcionalidad.</p> <p>Los trabajos se llevan a cabo y se ponen en la cola de espera para su correspondiente release. Adem\u00e1s, los Product Owners de la compa\u00f1\u00eda suelen solicitar mejoras en las aplicaciones asociados a cambios en la estrategia del negocio o para solucionar problemas potendiales no detectados por los clientes. Como se mencion\u00f3 anteriormente, el equipo de Operaciones es una unidad cross que forma parte del \u00e1rea de TI. Se apoyan en la documentaci\u00f3n elaborada por los equipos de Desarrollo para poder solucionar los posibles problemas que surjan en las aplicaciones.</p> <p>El equipo de Operaciones suele adem\u00e1s realizar diferentes tareas, como son:</p> <ul> <li>Gestionar solicitudes de variaci\u00f3n de cuotas para los servicios.</li> <li>Aplicar cambios en esquemas de las bases de datos.</li> <li>Revisi\u00f3n de alertas de monitorizaci\u00f3n no cr\u00edticas.</li> <li>Realizaci\u00f3n manual de liberaci\u00f3n de Releases.</li> <li>Conectarse f\u00edsicamente a la infraestructura para operativas rutinarias.</li> <li>Restablecimiento peri\u00f3dico de contrase\u00f1as.</li> <li>Creaci\u00f3n/eliminaci\u00f3n de usuarios.</li> <li>Reinicios manuales.</li> <li>Extracci\u00f3n manual de datos para la generaci\u00f3n de reportes.</li> <li>Escalado manual de la infraestructura, etc.</li> </ul> <p>Las aplicaciones de software est\u00e1n desarrolladas con tecnolog\u00eda Java para el backend y para el Front se utiliza Angular. Dispone de cuatro entornos: DEV, TEST, UAT y PRO Utiliza Bases de datos estructuradas, sistemas de cach\u00e9, balanceo de carga y todo est\u00e1 montado en entornos Cloud p\u00fablicas. Tiene implementado un sistema de Disaster Recovery en caso de que se presenten problemas con las aplicaciones.</p> <p>Actualmente, las aplicaciones est\u00e1n en proceso de transformaci\u00f3n, pasando de ser aplicaciones monol\u00edticas que se despliegan en m\u00e1quinas virtuales a ser aplicaciones Cloud Native, basadas en microservicios y en un modelo \u201csoftware as a service\u201d multi-tenant. La funcionalidad del backend estar\u00e1 expuesta mediante APIs que ser\u00e1n consumidas por las aplicaciones front. Implementar\u00e1 la especificaci\u00f3n oAuth2 para la autenticaci\u00f3n/autorizaci\u00f3n de consumo de APIs.</p>"},{"location":"objetivosFuturo/","title":"Objetivos para el futuro","text":"<p>Un factor determinante del cambio es la aparici\u00f3n de un nuevo competidor directo que presta servicios similares. Este competidor es mucho m\u00e1s peque\u00f1o, pero es capaz de ofrecer nuevas funcionalidades r\u00e1pidamente y ofrece una soluci\u00f3n de \"Software as a Service\". InmoSolutions conf\u00eda que con los cambios mencionados anteriormente se podr\u00e1 hacer frente a estos problemas y volver a ser competitivos.</p> <p>InmoSolutions tiene los siguientes objetivos para su transformaci\u00f3n DevOps:</p> <ul> <li>Visi\u00f3n clara para el desarrollo de los productos.</li> <li>Trabajar de la mano con los equipos de Desarrollo buscando sinergias que permitan mejorar el ciclo de vida de las aplicaciones.</li> <li>Centrarse en liberaciones de releases m\u00e1s r\u00e1pidas y de mayor calidad.</li> <li>Aumentar la satisfacci\u00f3n del cliente.</li> <li>Puesta en producci\u00f3n de nuevas funcionalidades con mayor rapidez.</li> <li>Reducir el n\u00famero de fallos.</li> </ul>"},{"location":"retosPlanteados/","title":"Retos que plantea el modelo act\u00faal","text":"<p>Los m\u00e9todos de trabajo actuales plantean una serie de retos a InmoSolutions. El mayor es que no son suficientemente \u00e1giles en la entrega de las funcionalidades solicitadas por los clientes. La liberaci\u00f3n de releases se realizan semestralmente y es muy frecuente encontrarse con fallos en los despliegues que requieren realizar procesos manuales de marcha atr\u00e1s mientras se resuelven los problemas, que tambi\u00e9n suelen dar muchos problemas y p\u00e9rdida temporal del servicio. Esta interrupci\u00f3n puede alargarse en el tiempo, afectando la disponibilidad de las aplicaciones y por consecuencia a los clientes.</p> <p>Otro problema es la calidad del c\u00f3digo: los desarrolladores est\u00e1n muy cualificados, pero hay una falta general de revisi\u00f3n y supervisi\u00f3n del trabajo de los dem\u00e1s. Esto da lugar a errores, y los equipos de ingenier\u00eda tienen acumulada una larga lista de deuda t\u00e9cnica que hay que resolver.</p> <p>La falta de escalabilidad y el uso de la arquitectura monol\u00edtica empleada tambi\u00e9n son limitantes. Esto plantea serios retos operativos y da lugar a diferentes enfoques de configuraci\u00f3n para los distintos clientes; las versiones de la aplicaci\u00f3n no son coherentes en todos los clientes y algunos de ellos tambi\u00e9n tienen desplegadas versiones no compatibles, ya que no est\u00e1n dispuestos a permitir que la compa\u00f1\u00eda las actualice por temor a posibles ca\u00eddas.</p> <p>El entendimiento del concepto DevOps var\u00eda dentro de la organizaci\u00f3n. Hay grupos de personas que entienden lo que es DevOps, pero en general dudan en avanzar hacia un modelo que lo implemente.</p>"},{"location":"solucionPropuesta/","title":"Soluci\u00f3n propuesta","text":""},{"location":"solucionPropuesta/#sli","title":"SLI","text":"<p>Un SLI basado en la latencia de solicitud podr\u00eda ser el porcentaje de solicitudes que se completan en un tiempo determinado, en este caso vamos a determinar un 95% de las solicitudes deber\u00edan completarse en menos de 400 milisegundos.</p> <p>La tasa de error se refiere a la proporci\u00f3n de solicitudes que fallan en un sistema. En este caso vamos a determinar que como tope el 0,5% de las solicitudes deber\u00edan dar como resultado un error.</p> <p>El throughput se refiere a la cantidad de solicitudes que un sistema puede manejar en un per\u00edodo de tiempo determinado. Para determinar un throughput correcto, se ha decidido aplicar que el n\u00famero de solicitudes completadas exitosamente en un segundo deber\u00eda ser de 1000.</p> <p>La disponibilidad se refiere al tiempo durante el cual un sistema est\u00e1 operativo y accesible para los usuarios. Se ha decidido aplicar un 99.9% de disponibilidad mensual.</p> <p>La durabilidad se refiere a la capacidad de un sistema para retener y mantener los datos de manera confiable a lo largo del tiempo. Se ha decidido aplicar el almacenamiento confiable de un 99.9% de los datos durante 5 a\u00f1os.</p>"},{"location":"solucionPropuesta/#slo","title":"SLO","text":"<p>Un SLO basado en la latencia de solicitud podr\u00eda establecer un objetivo espec\u00edfico para la latencia promedio de las solicitudes. Decidimos aplicar una latencia de menos de 200 milisegundos.</p> <p>Un SLO basado en la tasa de error podr\u00eda establecer un objetivo para mantener la tasa de error por debajo de cierto umbral. Se decide aplicar que menos del 0.7% de las solicitudes ser\u00e1n error.</p> <p>Un SLO basado en el throughput podr\u00eda establecer un objetivo para el rendimiento del sistema en t\u00e9rminos de solicitudes por segundo. Se decide que por la magnitud de los servicios, se mantiene un minimo de throughtput de 1000 solicitudes por segundo.</p> <p>Un SLO basado en la disponibilidad podr\u00eda establecer un objetivo espec\u00edfico para la disponibilidad del sistema. Se decide aplicar un 99.9% de disponibilidad anual.</p> <p>Un SLO basado en la durabilidad podr\u00eda establecer un objetivo para la durabilidad de los datos. Se decide aplicar un objetivo estandar en la industria, un 99,999%</p>"},{"location":"solucionPropuesta/#sla","title":"SLA","text":"<p>Un SLA basado en la latencia de solicitud podr\u00eda incluir un compromiso contractual en el que el proveedor del servicio se compromete a mantener una latencia de solicitud inferior a un umbral espec\u00edfico. Se decide aplicar un promedio mensual de latencia inferior a 300 milisegundos.</p> <p>Un SLA basado en la tasa de error podr\u00eda incluir un compromiso contractual en el que el proveedor del servicio se compromete a mantener una tasa de error por debajo de un valor espec\u00edfico. En nuestro caso, decidimos aplicar un promedio mensual de errores inferior al 0.5%.</p> <p>Un SLA basado en el throughput podr\u00eda incluir un compromiso contractual en el que el proveedor del servicio se compromete a proporcionar un throughput m\u00ednimo garantizado. Decidimos aplicar un promedio mensual de throughput no inferior a 500 solicitudes por segundo.</p> <p>Un SLA basado en la disponibilidad podr\u00eda incluir un compromiso contractual en el que el proveedor del servicio se compromete a mantener una disponibilidad m\u00ednima garantizada. Para mantener una disponibilidad adecuada proponemos un promedio mensual de no inferior al 99.95%.</p> <p>Un SLA basado en la durabilidad podr\u00eda incluir un compromiso contractual en el que el proveedor del servicio se compromete a mantener una durabilidad m\u00ednima garantizada. Se decide mantener un promedio anual de durabilidad no inferior al 99.9%.</p>"},{"location":"solucionPropuesta/#procesos-y-flujos-de-trabajo","title":"Procesos y flujos de trabajo","text":""},{"location":"solucionPropuesta/#servicio-de-guardias","title":"Servicio de guardias","text":"<p>Para garantizar la disponibilidad de los servicios, es importante contar con un servicio de guardias que pueda responder r\u00e1pidamente a los incidentes. Esto implica tener un equipo de guardia disponible las 24 horas del d\u00eda, los 7 d\u00edas de la semana, para responder a los incidentes y resolverlos de manera oportuna se propone el siguiente flujo de trabajo:</p> <ul> <li> <p>Prop\u00f3sito y responsabilidades claras: Los miembros del equipo de guardia deben comprender claramente el prop\u00f3sito de las guardias y las responsabilidades asociadas. Esto incluye conocer las metas de disponibilidad del sistema, los acuerdos de nivel de servicio (SLA) y las expectativas de respuesta ante incidentes.</p> </li> <li> <p>Rotaci\u00f3n equitativa: Las guardias deben distribuirse de manera equitativa entre los miembros del equipo. Esto asegura que todos los miembros tengan oportunidades iguales de aprender y participar en la resoluci\u00f3n de incidentes, evitando la fatiga y el agotamiento de los miembros individuales.</p> </li> <li> <p>Documentaci\u00f3n y procedimientos claros: Es esencial contar con documentaci\u00f3n y procedimientos claros para el manejo de incidentes. Esto incluye tener gu\u00edas detalladas sobre c\u00f3mo responder a incidentes comunes, protocolos de comunicaci\u00f3n y escalada, y una base de conocimientos actualizada que pueda ser referenciada durante las guardias.</p> </li> <li> <p>Automatizaci\u00f3n y monitoreo: Un buen servicio de guardias debe contar con herramientas de monitoreo y automatizaci\u00f3n efectivas. Esto permite detectar y responder r\u00e1pidamente a los incidentes, minimizando el tiempo de respuesta y facilitando la resoluci\u00f3n de problemas.</p> </li> <li> <p>Capacitaci\u00f3n y desarrollo: Los miembros del equipo de guardia deben recibir capacitaci\u00f3n continua para mantenerse actualizados sobre las \u00faltimas tecnolog\u00edas y mejores pr\u00e1cticas de resoluci\u00f3n de problemas. Esto incluye participar en ejercicios de simulaci\u00f3n de incidentes y revisar las lecciones aprendidas despu\u00e9s de cada guardia.</p> </li> <li> <p>Retroalimentaci\u00f3n y mejora continua: Es importante establecer un ciclo de retroalimentaci\u00f3n despu\u00e9s de cada guardia para identificar \u00e1reas de mejora. Esto implica analizar los incidentes ocurridos, revisar los tiempos de respuesta y la efectividad de las acciones tomadas, y realizar ajustes en los procesos o procedimientos seg\u00fan sea necesario.</p> </li> </ul>"},{"location":"solucionPropuesta/#resolucion-de-incidencias","title":"Resoluci\u00f3n de incidencias","text":"<p>Para abordar la resoluci\u00f3n de incidencias, se propone el siguiente flujo de trabajo:</p> <ul> <li> <p>Detecci\u00f3n y notificaci\u00f3n: El primer paso es detectar la incidencia lo m\u00e1s r\u00e1pido posible, ya sea a trav\u00e9s de sistemas de monitoreo automatizados, alertas o reportes de usuarios. Una vez detectada, es importante notificar al equipo de guardia o al equipo responsable de la resoluci\u00f3n de incidentes.</p> </li> <li> <p>Respuesta inicial: El equipo debe iniciar una respuesta r\u00e1pida y efectiva. Esto implica recopilar informaci\u00f3n relevante sobre la incidencia, como registros del sistema, m\u00e9tricas de rendimiento y cualquier dato disponible para comprender la naturaleza y el alcance del problema.</p> </li> <li> <p>Mitigaci\u00f3n y estabilizaci\u00f3n: Una vez recopilada la informaci\u00f3n inicial, el equipo debe tomar medidas para mitigar los efectos de la incidencia y estabilizar el sistema. Esto puede incluir acciones como reiniciar servicios, aplicar parches, ajustar la configuraci\u00f3n o tomar otras medidas correctivas seg\u00fan corresponda.</p> </li> <li> <p>Comunicaci\u00f3n y coordinaci\u00f3n: Durante todo el proceso de resoluci\u00f3n de la incidencia, es crucial mantener una comunicaci\u00f3n clara y efectiva. Esto implica informar a los interesados relevantes, como usuarios, clientes o partes interesadas internas, sobre el progreso de la resoluci\u00f3n y proporcionar estimaciones realistas sobre el tiempo de recuperaci\u00f3n.</p> </li> <li> <p>Investigaci\u00f3n y an\u00e1lisis posterior: Una vez que se haya restablecido la estabilidad del sistema, es importante llevar a cabo una investigaci\u00f3n exhaustiva para comprender la causa ra\u00edz de la incidencia. Esto implica analizar los registros, revisar los eventos previos y utilizar t\u00e9cnicas como el an\u00e1lisis de causa ra\u00edz (RCA) para identificar las causas subyacentes y prevenir futuros incidentes similares.</p> </li> <li> <p>Lecciones aprendidas y mejoras: Despu\u00e9s de la resoluci\u00f3n de la incidencia y la investigaci\u00f3n posterior, el equipo debe llevar a cabo una sesi\u00f3n de revisi\u00f3n y an\u00e1lisis para identificar lecciones aprendidas y oportunidades de mejora. Esto puede implicar actualizar la documentaci\u00f3n, mejorar los sistemas de monitoreo, implementar cambios en la arquitectura o procesos, o cualquier otra acci\u00f3n que ayude a prevenir futuros incidentes o a manejarlos de manera m\u00e1s efectiva.</p> </li> </ul>"},{"location":"solucionPropuesta/#gestion-de-incidencias","title":"Gesti\u00f3n de incidencias","text":"<p>Es fundamental tener un proceso de gesti\u00f3n de incidencias bien definido, documentado y practicado regularmente en Inmosolutions. Esto permite una respuesta r\u00e1pida, efectiva y consistente ante las incidencias, minimizando el impacto en el sistema y mejorando la confiabilidad y disponibilidad en general. Para ello, se proponen los siguientes puntos.</p> <p>La gesti\u00f3n de incidencias, seg\u00fan el libro \"Site Reliability Engineering\" (SRE) de Google, se basa en un enfoque estructurado y sistem\u00e1tico. Comienza con la detecci\u00f3n temprana de la incidencia, utilizando sistemas de monitoreo automatizados, alertas, registros de errores o reportes de usuarios.</p> <p>Una vez detectada, se notifica al equipo responsable de su gesti\u00f3n y se inicia una investigaci\u00f3n para comprender la naturaleza y causa ra\u00edz del problema. Esto implica recopilar informaci\u00f3n relevante, revisar registros, m\u00e9tricas y otros datos que ayuden a identificar qu\u00e9 est\u00e1 causando la incidencia y c\u00f3mo est\u00e1 afectando al sistema.</p> <p>Durante todo el proceso de gesti\u00f3n de la incidencia, es esencial mantener una comunicaci\u00f3n clara y efectiva. Se informa a los interesados, como usuarios o partes interesadas internas, sobre el estado de la incidencia, los pasos que se est\u00e1n tomando y las estimaciones de tiempo para su resoluci\u00f3n. La comunicaci\u00f3n continua ayuda a mantener la confianza y la transparencia.</p> <p>Una vez comprendida la causa ra\u00edz de la incidencia, se toman acciones para mitigar sus efectos. Esto puede implicar aplicar parches, reiniciar servicios, realizar ajustes de configuraci\u00f3n u otras acciones correctivas necesarias para restablecer el funcionamiento normal del sistema.</p> <p>Una vez mitigada la incidencia, se realiza un seguimiento para confirmar que el sistema est\u00e9 nuevamente en funcionamiento normal y que el problema se haya resuelto por completo. Tambi\u00e9n se lleva a cabo un an\u00e1lisis posterior para identificar lecciones aprendidas y oportunidades de mejora, con el objetivo de prevenir futuras incidencias similares.</p>"},{"location":"solucionPropuesta/#documentacion-del-postmortem","title":"Documentaci\u00f3n del Postmortem","text":""},{"location":"solucionPropuesta/#que-es-un-postmortem-y-que-partes-debe-tener","title":"\u00bfQu\u00e9 es un postmortem y que partes debe tener?","text":"<p>En la pr\u00e1ctica de Site Reliability Engineering (SRE) de Google, un documento postmortem (tambi\u00e9n conocido como informe de an\u00e1lisis de incidentes) es un documento que se crea despu\u00e9s de que ocurre una incidencia o interrupci\u00f3n del servicio. Su prop\u00f3sito principal es analizar y documentar de manera detallada la causa ra\u00edz de la incidencia, las acciones tomadas para resolverla y las lecciones aprendidas para prevenir futuros problemas similares.</p> <p>El documento postmortem es una herramienta importante en la cultura de SRE de Google, ya que fomenta la transparencia, el aprendizaje y la mejora continua. Se espera que se redacte de manera objetiva, describiendo los hechos relevantes, las decisiones tomadas y sus impactos, sin buscar culpables o sanciones. El objetivo es comprender completamente lo que sucedi\u00f3 y trabajar en conjunto para evitar que ocurra nuevamente.</p> <p>Un documento postmortem t\u00edpicamente incluir\u00e1 informaci\u00f3n sobre la incidencia, como la fecha y hora de inicio, el impacto en el sistema y los usuarios, as\u00ed como una cronolog\u00eda detallada de los eventos relevantes. Tambi\u00e9n se describir\u00e1 la causa ra\u00edz identificada, que puede ser una combinaci\u00f3n de errores humanos, fallos en el dise\u00f1o del sistema, problemas de configuraci\u00f3n, entre otros. Se proporcionar\u00e1n detalles sobre las acciones correctivas y preventivas tomadas, junto con recomendaciones para mejorar la resiliencia del sistema.</p> <p>Adem\u00e1s, el documento postmortem puede incluir datos cuantitativos, como el tiempo de recuperaci\u00f3n, la p\u00e9rdida de ingresos o el n\u00famero de usuarios afectados, as\u00ed como comentarios y retroalimentaci\u00f3n recopilados durante la incidencia. Este documento se comparte ampliamente dentro de la organizaci\u00f3n para que otros equipos puedan aprender de la experiencia y contribuir a la mejora continua de la confiabilidad y disponibilidad del sistema.</p> <p>Para Inmosolutions se propone que los siguientes apartados sean obligatorios a la hora de hacer un documento postmortem:</p> <ul> <li> <p>Resumen ejecutivo: Este resumen proporciona una descripci\u00f3n concisa de la incidencia, incluyendo el impacto en el sistema, la duraci\u00f3n y las partes afectadas. Tambi\u00e9n puede incluir una evaluaci\u00f3n inicial de la gravedad y las lecciones aprendidas m\u00e1s importantes.</p> </li> <li> <p>Cronolog\u00eda detallada: El documento debe proporcionar una cronolog\u00eda completa de los eventos que llevaron a la incidencia, desde el inicio hasta la resoluci\u00f3n. Esto incluye detalles sobre los signos de advertencia, las acciones tomadas y cualquier cambio relevante en el sistema durante el incidente.</p> </li> <li> <p>Causa ra\u00edz: Se debe realizar un an\u00e1lisis de causa ra\u00edz exhaustivo para identificar las causas fundamentales que contribuyeron a la incidencia. Esto implica investigar y documentar los fallos en el dise\u00f1o, las configuraciones incorrectas, los errores humanos u otros factores subyacentes que condujeron al incidente.</p> </li> <li> <p>Acciones correctivas y preventivas: El documento debe incluir las acciones tomadas para corregir la incidencia y prevenir futuros problemas similares. Esto puede incluir cambios en la arquitectura, en los procesos, en las herramientas de monitoreo o en la capacitaci\u00f3n del personal. Es importante proporcionar una descripci\u00f3n clara de estas acciones y su estado de implementaci\u00f3n.</p> </li> <li> <p>Lecciones aprendidas: Se deben identificar y documentar las lecciones aprendidas durante la gesti\u00f3n de la incidencia. Esto puede incluir recomendaciones para mejorar la resiliencia del sistema, sugerencias para optimizar la respuesta a incidentes o cualquier otro conocimiento valioso adquirido durante el proceso.</p> </li> <li> <p>Impacto y retroalimentaci\u00f3n: El documento debe abordar el impacto de la incidencia en el sistema, los usuarios y otros aspectos relevantes. Tambi\u00e9n es importante recopilar comentarios y retroalimentaci\u00f3n de los equipos involucrados en la gesti\u00f3n de la incidencia para identificar \u00e1reas de mejora en los procesos y la colaboraci\u00f3n.</p> </li> </ul>"},{"location":"solucionPropuesta/#ejemplo-de-postmortem","title":"Ejemplo de Postmortem","text":"<pre><code>Resumen ejecutivo:\n\nLa incidencia ocurrida el 15 de mayo de 2023 afect\u00f3 al sistema de facturaci\u00f3n y provoc\u00f3 una interrupci\u00f3n del servicio durante aproximadamente 3 horas. El incidente afect\u00f3 a los usuarios finales y gener\u00f3 una p\u00e9rdida estimada de ingresos de $50,000. El objetivo de este documento es analizar la causa ra\u00edz de la incidencia y proponer acciones correctivas y preventivas.\n\nCronolog\u00eda detallada:\n\n- 9:00 a.m.: Se reciben las primeras alertas de fallas en el sistema de facturaci\u00f3n.\n- 9:05 a.m.: El equipo de guardia inicia la investigaci\u00f3n y detecta un aumento inesperado en la carga de trabajo del servidor.\n- 9:15 a.m.: Se identifica un error en la configuraci\u00f3n de escalado autom\u00e1tico, lo que lleva a una asignaci\u00f3n inadecuada de recursos.\n- 9:30 a.m.: Se toma la decisi\u00f3n de desactivar el escalado autom\u00e1tico y aumentar manualmente la capacidad del servidor.\n- 10:00 a.m.: La capacidad adicional del servidor permite estabilizar el sistema y restablecer el servicio.\n- 12:00 p.m.: La causa ra\u00edz se identifica como un error de configuraci\u00f3n no detectado durante las pruebas previas a la implementaci\u00f3n.\n  Causa ra\u00edz:\n  El error de configuraci\u00f3n que condujo a la incidencia fue una regla incorrecta en el sistema de escalado autom\u00e1tico. Durante la implementaci\u00f3n previa, la regla no fue debidamente validada, lo que permiti\u00f3 que se aplicara una configuraci\u00f3n err\u00f3nea. Esto result\u00f3 en un aumento excesivo de la capacidad de los servidores, provocando inestabilidad y un rendimiento deficiente.\n\nAcciones correctivas y preventivas:\n\nSe realizar\u00e1 una revisi\u00f3n exhaustiva del proceso de validaci\u00f3n de cambios en la configuraci\u00f3n, incluyendo pruebas rigurosas y validaci\u00f3n por parte de m\u00faltiples miembros del equipo antes de su implementaci\u00f3n.\nSe implementar\u00e1 una alerta adicional para monitorear el rendimiento del escalado autom\u00e1tico y detectar anomal\u00edas en la capacidad de los servidores.\nSe llevar\u00e1 a cabo una sesi\u00f3n de capacitaci\u00f3n para todo el equipo de operaciones, destacando la importancia de la validaci\u00f3n adecuada de la configuraci\u00f3n y las mejores pr\u00e1cticas para el manejo de situaciones similares.\n\nLecciones aprendidas:\n\nLa importancia de una validaci\u00f3n rigurosa de los cambios de configuraci\u00f3n antes de su implementaci\u00f3n.\nLa necesidad de contar con alertas y monitoreo adecuados para detectar anomal\u00edas en el rendimiento del sistema.\nLa importancia de la comunicaci\u00f3n clara y r\u00e1pida con los interesados durante una incidencia para mantener la confianza del cliente.\nImpacto y retroalimentaci\u00f3n:\nLa incidencia caus\u00f3 una interrupci\u00f3n significativa del servicio, generando una p\u00e9rdida de ingresos y afectando la satisfacci\u00f3n del cliente. Se recopilaron comentarios de los usuarios afectados y se tomar\u00e1n medidas para mejorar la comunicaci\u00f3n durante futuras incidencias y minimizar el impacto en el negocio.\n\nEste documento de postmortem se compartir\u00e1 ampliamente dentro del equipo de operaciones y se tomar\u00e1n las acciones necesarias para implementar las correcciones y mejorar la resiliencia del sistema.\n\n</code></pre>"},{"location":"solucionPropuesta/#formacion-del-personal","title":"Formaci\u00f3n del personal","text":"<p>En Inmosolutions consideramos que adem\u00e1s de adquirir conocimientos te\u00f3ricos, la formaci\u00f3n en SRE tambi\u00e9n implica experiencia pr\u00e1ctica significativa, como participaci\u00f3n en proyectos reales, trabajo en entornos operativos y exposici\u00f3n a situaciones reales de incidencias. Esto contribuye al desarrollo efectivo de profesionales de SRE. Para ello se proponen los siguientes apartados n\u00facleo para la formaci\u00f3n del personal:</p> <ul> <li> <p>Fundamentos de ingenier\u00eda de confiabilidad: Los profesionales de SRE deben comprender los principios fundamentales de la ingenier\u00eda de confiabilidad, como disponibilidad, escalabilidad, tolerancia a fallos, monitoreo, resiliencia y gesti\u00f3n de incidencias.</p> </li> <li> <p>Conocimientos t\u00e9cnicos profundos: Los ingenieros de SRE deben tener un conocimiento profundo de los sistemas que gestionan, incluyendo lenguajes de programaci\u00f3n, sistemas operativos, redes, almacenamiento, bases de datos y tecnolog\u00edas espec\u00edficas del dominio.</p> </li> <li> <p>Automatizaci\u00f3n y desarrollo de software: Los profesionales de SRE deben tener habilidades en desarrollo de software y automatizaci\u00f3n de tareas, incluyendo programaci\u00f3n, scripting, desarrollo de herramientas, infraestructura como c\u00f3digo y pr\u00e1cticas \u00e1giles de desarrollo.</p> </li> <li> <p>Gesti\u00f3n de incidencias y respuesta a emergencias: La formaci\u00f3n en gesti\u00f3n de incidencias es esencial para los ingenieros de SRE, incluyendo t\u00e9cnicas de identificaci\u00f3n, notificaci\u00f3n, escalado, investigaci\u00f3n, resoluci\u00f3n y an\u00e1lisis posterior a la incidencia.</p> </li> <li> <p>Habilidades de colaboraci\u00f3n y comunicaci\u00f3n: Los profesionales de SRE deben ser capaces de colaborar eficazmente con otros equipos y partes interesadas, incluyendo habilidades de comunicaci\u00f3n clara, trabajo en equipo, resoluci\u00f3n de conflictos y negociaci\u00f3n.</p> </li> <li> <p>Cultura de aprendizaje continuo: Se valora la actitud de aprendizaje continuo en SRE, donde los ingenieros deben mantenerse actualizados con las \u00faltimas tecnolog\u00edas, pr\u00e1cticas y enfoques, estar abiertos a aprender de los errores y adaptarse r\u00e1pidamente a los cambios.</p> </li> </ul>"},{"location":"solucionPropuesta/#skills-necesarios","title":"Skills necesarios","text":"<p>A continuaci\u00f3n, se desglosan y se explican los skills clave que el equipo SRE de Innosolutions debe poseer para trabajar de manera eficaz y eficiente:</p> <ul> <li>Conocimientos T\u00e9cnicos</li> </ul> <p>Los miembros del equipo de DevOps deben tener s\u00f3lidos conocimientos t\u00e9cnicos. Estos conocimientos incluyen la programaci\u00f3n y el scripting, la administraci\u00f3n de sistemas, la gesti\u00f3n de redes y la seguridad de la informaci\u00f3n. La programaci\u00f3n es fundamental para automatizar tareas, mejorar procesos y desarrollar nuevas funcionalidades en las soluciones que Inmosolutions comercializa.</p> <p>Por otro lado, las competencias en administraci\ufffdn de sistemas son esenciales para gestionar y mantener las infraestructuras tecnol\u00f3gicas de la empresa. Esto implica entender c\u00f3mo funcionan los sistemas operativos, c\u00f3mo se gestionan los recursos y c\u00f3mo se solucionan los problemas.</p> <p>En cuanto a la gesti\u00f3n de redes, se necesita para garantizar que los datos fluyen de manera efectiva entre los diferentes componentes del sistema. Y en relaci\u00f3n con la seguridad de la informaci\u00f3n, se debe garantizar que los datos de la empresa y de sus clientes est\u00e1n protegidos en todo momento.</p> <ul> <li>Ciclo de Vida del Software</li> </ul> <p>Otra habilidad fundamental para un equipo de DevOps es la comprensi\u00f3n del ciclo de vida del software. Los miembros del equipo deben entender las distintas etapas del desarrollo de software, desde la concepci\u00f3n inicial, el dise\u00f1o, la codificaci\u00f3n, la prueba, el despliegue hasta el mantenimiento y la eventual retirada o reemplazo.</p> <p>Es crucial para un equipo de DevOps tener un entendimiento completo del ciclo de vida del software para facilitar la comunicaci\u00f3n y colaboraci\u00f3n con otros equipos como desarrollo y pruebas, as\u00ed como para mejorar los procesos y pr\u00e1cticas a lo largo de todo el ciclo de vida.</p> <ul> <li>Experiencia con Herramientas de DevOps</li> </ul> <p>Los miembros del equipo de DevOps deben estar familiarizados con una variedad de herramientas utilizadas en la metodolog\u00eda DevOps. Estas herramientas pueden incluir sistemas de control de versiones como Git, sistemas de integraci\u00edn continua y despliegue continuo (CI/CD) como Jenkins, herramientas de gesti\u00f3n de configuraci\u00f3n como Ansible, Docker para la contenerizaci\u00f3n y Kubernetes para la orquestaci\u00f3n de contenedores, entre otras. </p> <ul> <li>Habilidades de Colaboraci\u00f3n y Comunicaci\u00f3n</li> </ul> <p>El objetivo central de DevOps es mejorar la colaboraci\u00f3n entre los equipos de desarrollo y operaciones. Por tanto, las habilidades de colaboraci\u00f3n y comunicaci\u00f3n son fundamentales. Los miembros del equipo deben ser capaces de trabajar en equipo, compartir conocimientos, comunicarse de manera efectiva y resolver conflictos de manera constructiva. Teniendo en cuenta la expansi\u00f3n.</p> <ul> <li>Mentalidad de Mejora Continua</li> </ul> <p>Por \u00faltimo, pero no menos importante, un equipo de DevOps debe tener una mentalidad de mejora continua. Esto significa que est\u00e1n siempre buscando maneras de mejorar los procesos, las pr\u00e1cticas, las herramientas y las soluciones. Esta mentalidad es esencial para mantener a Inmosolutions a la vanguardia del mercado inmobiliario. </p>"},{"location":"solucionPropuesta/#tareas-por-roles","title":"Tareas por roles","text":"<p>A continuaci\u00f3n se detallan los roles, tareas y requisitos para el puesto de SRE en Inmosolutions:</p> <ul> <li>Roles del Equipo SRE:</li> </ul> <p>Ingeniero SRE: El rol principal en un equipo de SRE, estos ingenieros son responsables de la confiabilidad y el buen funcionamiento de los servicios y productos de la empresa. Se espera que tengan una mentalidad orientada al desarrollo y la operaci\u00f3n.</p> <p>Gerente de SRE: Este es un rol de liderazgo en el equipo, que supervisa a los SREs y se asegura de que el equipo est\u00e1 funcionando eficazmente y cumpliendo sus objetivos. El Gerente de SRE tambien act\u00faa como punto de contacto entre el equipo de SRE y otros equipos y stakeholders dentro de la empresa.</p> <p>Ingeniero de Producto SRE: Este rol se centra m\u00e1s en el lado del desarrollo de software del SRE, trabajando estrechamente con los equipos de desarrollo para dise\u00f1ar y construir sistemas y funciones que sean confiables y escalables.</p> <ul> <li>Tareas de un Equipo SRE:</li> </ul> <p>Mantenimiento y Mejora de la Confiabilidad del Sistema: Esto puede incluir la supervisi\u00f3n de los sistemas, la detecci\u00f3n y resoluci\u00f3n de problemas, y la implementaci\u00f3n de mejoras para aumentar la confiabilidad y eficiencia del sistema.</p> <p>Desarrollo e Implementaci\u00f3n de Software: Los SREs a menudo trabajan en el desarrollo de software, construyendo nuevas funciones y mejoras para los sistemas existentes.</p> <p>Planificaci\u00f3n y Ejecuci\u00f3n de Cambios: Los SREs estar\u00e1n involucrados en la planificaci\u00f3n y ejecuci\u00f3n de cambios en los sistemas y la infraestructura de la empresa, como la implementaci\u00f3n de nuevas tecnolog\u00edas o la migraci\u00f3n a nuevas plataformas.</p> <p>Colaboraci\u00f3n con Otros Equipos: Los SREs deben trabajar estrechamente con otros equipos dentro de la empresa y terceros, incluyendo equipos de desarrollo, operaciones, soporte y gesti\u00f3n de productos.</p> <ul> <li>Requisitos del Puesto:</li> </ul> <p>Experiencia: Los roles de ingeniero de SRE requieren al menos 3-5 a\u00f1os de experiencia trabajando en un entorno de TI, con experiencia espec\u00edfica en roles de desarrollo de software y/o operaciones de TI. Para roles de liderazgo, como el Gerente de SRE, se requiere que los candidatos tengan al menos 5-7 a\u00f1os de experiencia, incluyendo experiencia en la gesti\u00f3n de equipos.</p> <p>Habilidades T\u00e9cnicas: Los SREs deben tener s\u00f3lidas habilidades t\u00e9cnicas, incluyendo la programaci\u00f3n (preferentemente en lenguajes como Python, Go o Java), la administraci\u00f3n de sistemas, la gesti\u00f3n de redes, la seguridad de la informaci\u00f3n y el uso de herramientas de DevOps como Git, Docker y Kubernetes. Tambi\u00e9n deben tener experiencia en la monitorizaci\u00f3n y el diagn\u00f3stico de problemas de sistemas a gran escala.</p> <p>Habilidades de Resoluci\u00f3n de Problemas: Los SREs de imnosolutiones deben enfocarse a la soluci\u00f3n de problemas, con capacidad para identificar y resolver problemas de manera eficaz y eficiente.</p> <p>Habilidades de Comunicaci\u00f3n: Los SREs deben disponer de habilidades de comunicaci\u00f3n, ya que necesitar\u00e1n colaborar estrechamente con otros equipos de innosolutions, clientes y proveedores. </p>"},{"location":"solucionPropuesta/#monitorizacion","title":"Monitorizaci\u00f3n","text":"<p>La estrategia de monitorizaci\u00f3n siguiendo los lineamientos establecidos en el modelo SRE para la propuesta de InmoSolutions es la siguiente:</p> <ul> <li> <p>Definir m\u00e9tricas clave para medir la disponibilidad y el rendimiento de las aplicaciones, as\u00ed como establecer objetivos espec\u00edficos para cada m\u00e9trica.</p> </li> <li> <p>Implementar una insfraestrucutra de monitorizaci\u00f3n para recopilar y visualizar datos de rendimiento y disponibilidad de las aplicaciones. Adem\u00e1s, se deben configurar alertas para notificar al equipo cuando se superen los umbrales establecidos. Para ello se har\u00e1 uso de dos herramientas: Prometheus y Grafana.</p> </li> </ul> <p>Prometheus: es una herramienta de monitoreo de datos de c\u00f3digo abierto.Consta de varios componentes como un servidor para consultar y almacenar las series de datos, un Pushgateway para permitir que los trabajos ef\u00edmeros y por lotes expongan sus m\u00e9tricas, exporters \u00fatiles para casos donde no es factible instrumentar un sistema dado con m\u00e9tricas directamente, un sistema de manejo de alarmado y un sistema de discovery.</p> <p>En Prometheus, todos los datos se almacenan como series de tiempo. Cada serie de tiempo se identifica de forma \u00fanica por su nombre de indicador y un conjunto de pares clave-valor, tambi\u00e9n conocidos como \u201clabels\u201d. Y los tipos de m\u00e9tricas utilizados son: counter, es una m\u00e9trica acumulativa que representa un solo contador cuyo valor puede solamente incrementar o reiniciar a cero; gauge, es una m\u00e9trica que representa un solo valor numeral que puede arbitrariamente subir o bajar; y histogram, muestrea las observaciones y las cuenta en categor\u00edas configurables proporcionando tambi\u00e9n una suma de todos los valores observados.</p> <p>Grafana: es una plataforma interactiva y open source de visualizaci\u00f3n de datos desarrollada por Grafana Labs. Dicha plataforma permite a los usuarios ver sus datos a trav\u00e9s de tablas y gr\u00e1ficos que se unifican en un panel de control (o en varios) para facilitar la interpretaci\u00f3n y la comprensi\u00f3n. Tambi\u00e9n permite realizar consultas y configurar avisos sobre la informaci\u00f3n y los indicadores desde el lugar en el que se almacena dicha informaci\u00f3n. De esta forma, se podr\u00e1 analizar los datos e identificar las tendencias y las inconsistencias con mayor facilidad, por lo que los procesos ser\u00e1n m\u00e1s eficientes.</p> <p>En el caso que compete, se har\u00e1 uso de Prometheus como backend de los datos almacenados y se utilizar\u00e1 como origen en Grafana, donde se realizar\u00e1n las visualizaciones oportunas para tener una monitorizaci\u00f3n clara. Adem\u00e1s, en el sistema de Alertmanager de Grafana se crear\u00e1n las alertas oportunas que permitir\u00e1n una r\u00e1pida detecci\u00f3n de fallos o de excesi\u00f3n de los umbrales definidos.</p> <ul> <li> <p>Monitorizar la infraestructura y los servicios subyacentes: Supervisar los recursos de la infraestructura y monitorizar tambi\u00e9n los servicios utilizados por las aplicaciones y los servicios de autenticaci\u00f3n y autorizaci\u00f3n (OAuth2), para asegurarse de que est\u00e9n disponibles y funcionando correctamente.</p> </li> <li> <p>Realizar pruebas de carga y estr\u00e9s: Ejecutar pruebas de carga y estr\u00e9s para evaluar el rendimiento de las aplicaciones bajo cargas de trabajo intensas. As\u00ed, se podr\u00e1 identificar los cuellos de botella y los puntos d\u00e9biles en la infraestructura y las aplicaciones, y tomar medidas para mejorar su rendimiento y escalabilidad.</p> </li> <li> <p>Implementar registros y an\u00e1lisis de registros: Configurar sistemas de registro (logs) para recopilar informaci\u00f3n sobre el comportamiento de las aplicaciones y la infraestructura. </p> </li> </ul>"},{"location":"solucionPropuesta/#automatizacion","title":"Automatizaci\u00f3n","text":"<p>El proceso de identificaci\u00f3n de tareas rutinarias y su posible automatizaci\u00f3n sigue los siguientes pasos:</p> <ul> <li> <p>An\u00e1lisis de las tareas rutinarias: Identificar y listar las tareas que se realizan de forma repetitiva en el equipo de operaciones. En este caso, algunas tareas mencionadas son: gestionar solicitudes de variaci\u00f3n de cuotas, aplicar cambios en esquemas de bases de datos, revisar alertas de monitorizaci\u00f3n, realizar liberaciones de Releases manuales, reinicios manuales y extracci\u00f3n manual de datos, entre otras.</p> </li> <li> <p>Priorizaci\u00f3n de tareas: Evaluar la importancia y frecuencia de cada tarea rutinaria para determinar cu\u00e1les son las m\u00e1s cr\u00edticas o que requieren m\u00e1s tiempo y esfuerzo. Esto permitir\u00e1 priorizar las tareas que podr\u00edan beneficiarse m\u00e1s de la automatizaci\u00f3n.</p> </li> <li> <p>Evaluaci\u00f3n de la viabilidad de automatizaci\u00f3n: Analizar cada tarea identificada y evaluar su grado de automatizaci\u00f3n posible. Algunas tareas pueden ser f\u00e1cilmente automatizables, mientras que otras pueden requerir m\u00e1s esfuerzo y recursos para implementar la automatizaci\u00f3n.</p> </li> <li> <p>Dise\u00f1o y desarrollo de soluciones automatizadas: Para las tareas identificadas como viables para la automatizaci\u00f3n, dise\u00f1ar y desarrollar soluciones automatizadas. Esto puede implicar el uso de scripts, herramientas de automatizaci\u00f3n, configuraciones program\u00e1ticas, integraci\u00f3n con APIs, entre otros.</p> </li> <li> <p>Pruebas y validaci\u00f3n: Realizar pruebas exhaustivas de las soluciones automatizadas para garantizar su correcto funcionamiento. Esto implica verificar que las tareas se realicen de manera precisa, eficiente y sin errores.</p> </li> <li> <p>Implementaci\u00f3n y despliegue: Introducir gradualmente las soluciones automatizadas en el entorno de producci\u00f3n. Es importante planificar cuidadosamente la implementaci\u00f3n para minimizar el impacto en el funcionamiento actual y asegurar una transici\u00f3n fluida.</p> </li> <li> <p>Monitoreo y seguimiento: Establecer mecanismos de monitoreo y seguimiento de las tareas automatizadas para detectar posibles problemas o mejoras. Esto puede incluir el uso de m\u00e9tricas, registros y alertas para asegurar que la automatizaci\u00f3n est\u00e1 funcionando correctamente y proporcionando los resultados esperados.</p> </li> <li> <p>Mejora continua: A medida que se automatizan tareas rutinarias, es importante buscar constantemente oportunidades para mejorar y optimizar el proceso de automatizaci\u00f3n. Esto implica recibir retroalimentaci\u00f3n de los equipos involucrados, recopilar m\u00e9tricas de rendimiento y buscar formas de optimizar a\u00fan m\u00e1s las tareas automatizadas.</p> </li> </ul>"},{"location":"solucionPropuesta/#stack-tecnologico","title":"Stack tecnol\u00f3gico","text":"<p>Se propone el siguiente stack tecnol\u00f3gico para implementar la unidad Devops:</p> <p>Control de versiones: GitHub: Es una plataforma de control de versiones distribuido basado en Git. Permite almacenar y gestionar el c\u00f3digo fuente de manera colaborativa, facilitando la colaboraci\u00f3n entre desarrolladores y el seguimiento de cambios en el c\u00f3digo.  GitHub se puede utilizar como repositorio de c\u00f3digo para almacenar y gestionar el c\u00f3digo fuente de las aplicaciones de InmoSolutions. Los equipos de desarrollo pueden colaborar, revisar y realizar seguimiento de los cambios en el c\u00f3digo a trav\u00e9s de ramas, pull requests y comentarios.</p> <p>Gesti\u00f3n de la nube: Azure: Es una plataforma de servicios en la nube de Microsoft. Proporciona una amplia gama de servicios, como infraestructura escalable, almacenamiento, bases de datos, servicios de aplicaciones, redes y m\u00e1s. Azure se utiliza para alojar y desplegar las aplicaciones de InmoSolutions en la nube.  Se puede utilizar para implementar y hospedar las aplicaciones de InmoSolutions en entornos cloud. Ofrece servicios como m\u00e1quinas virtuales, bases de datos, servicios de aplicaciones, almacenamiento, entre otros, que son necesarios para desplegar y escalar las aplicaciones de forma segura y confiable.</p> <p>Gesti\u00f3n de dependencias y construcci\u00f3n: Maven: Es una herramienta de gesti\u00f3n de dependencias y construcci\u00f3n de proyectos en Java. Maven permite definir y gestionar las dependencias del proyecto a trav\u00e9s de un archivo de configuraci\u00f3n (pom.xml). Tambi\u00e9n automatiza el proceso de compilaci\u00f3n, prueba y generaci\u00f3n de artefactos, lo que facilita la construcci\u00f3n de proyectos de forma coherente y reproducible. Maven se puede utilizar para construir, gestionar dependencias y generar los artefactos de las aplicaciones de InmoSolutions. Permite definir y mantener un proyecto de manera estructurada, gestionar las dependencias de bibliotecas y automatizar el proceso de compilaci\u00f3n y empaquetado de las aplicaciones.</p> <p>Integraci\u00f3n continua y entrega continua: Jenkins: Es una herramienta de automatizaci\u00f3n de integraci\u00f3n continua y entrega continua (CI/CD). Jenkins permite la configuraci\u00f3n de pipelines de construcci\u00f3n y despliegue, donde se pueden definir pasos y tareas automatizadas, como la compilaci\u00f3n del c\u00f3digo, ejecuci\u00f3n de pruebas, an\u00e1lisis est\u00e1tico, creaci\u00f3n de artefactos y despliegue en entornos de desarrollo, prueba y producci\u00f3n. Jenkins se puede utilizar para configurar y ejecutar pipelines de integraci\u00f3n continua que automatizan las tareas de compilaci\u00f3n, prueba y despliegue de las aplicaciones de InmoSolutions. Facilita la detecci\u00f3n temprana de errores, garantiza la calidad del c\u00f3digo y agiliza la entrega de nuevas funcionalidades al automatizar los procesos de construcci\u00f3n y despliegue.</p> <p>Contenedorizaci\u00f3n y despliegue: Tomcat: Es un servidor de aplicaciones web Java que permite ejecutar y desplegar aplicaciones basadas en tecnolog\u00eda Java Servlet y JavaServer Pages (JSP). Tomcat proporciona un entorno de ejecuci\u00f3n para aplicaciones Java y permite el despliegue sencillo de aplicaciones web. Tomcat se puede utilizar como servidor de aplicaciones para implementar y ejecutar las aplicaciones backend de InmoSolutions desarrolladas con tecnolog\u00eda Java. Proporciona un entorno de ejecuci\u00f3n estable y escalable para las aplicaciones web y permite gestionar el despliegue y la administraci\u00f3n de las aplicaciones en los diferentes entornos.</p> <p>Gesti\u00f3n de artefactos: Artifactory: Es un repositorio de artefactos empresarial que permite almacenar y gestionar de forma segura los artefactos generados durante el proceso de construcci\u00f3n de software. Artifactory es utilizado para gestionar las dependencias de las aplicaciones, como bibliotecas, JAR, WAR, Docker images, y garantizar su disponibilidad y trazabilidad.  Artifactory se puede utilizar como repositorio de artefactos para almacenar y gestionar los artefactos generados por Maven durante el proceso de construcci\u00f3n de las aplicaciones de InmoSolutions. Proporciona un lugar centralizado para almacenar y distribuir los artefactos, lo que facilita la gesti\u00f3n de versiones y la reutilizaci\u00f3n de componentes.</p> <p>An\u00e1lisis est\u00e1tico de c\u00f3digo: SonarQube: Es una plataforma de an\u00e1lisis est\u00e1tico de c\u00f3digo que proporciona m\u00e9tricas y an\u00e1lisis detallados sobre la calidad del c\u00f3digo. SonarQube permite identificar problemas de c\u00f3digo, vulnerabilidades, duplicaciones y malas pr\u00e1cticas. Ayuda a mantener un alto nivel de calidad en el c\u00f3digo fuente y promueve buenas pr\u00e1cticas de desarrollo. SonarQube se puede utilizar para analizar y evaluar la calidad del c\u00f3digo de las aplicaciones de InmoSolutions. Permite identificar y corregir problemas de c\u00f3digo, mantener un est\u00e1ndar de calidad en el desarrollo y mejorar la seguridad y el rendimiento de las aplicaciones.</p> <p>Estas tecnolog\u00edas se complementan entre s\u00ed para permitir la automatizaci\u00f3n de procesos, el despliegue \u00e1gil y confiable de aplicaciones, el control de calidad del c\u00f3digo y la gesti\u00f3n eficiente de dependencias y artefactos. La combinaci\u00f3n de estas herramientas en el stack tecnol\u00f3gico propuesto proporciona una base s\u00f3lida para implementar pr\u00e1cticas de DevOps en InmoSolutions y lograr los objetivos establecidos.</p>"}]}